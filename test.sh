#!/bin/bash
set -o pipefail

# Cores para output
ciano="\e[36m"
verde="\e[32m"
amarelo="\e[33m"
vermelho="\e[31m"
reset="\e[0m"

echo -e "${ciano}üß™ Teste R√°pido - FFmpeg para n8n${reset}"
echo "=================================="

# Verificar se os scripts existem
echo -e "${amarelo}üìÅ Verificando arquivos...${reset}"
if [ -f "install.sh" ]; then
    echo -e "${verde}‚úÖ install.sh encontrado${reset}"
else
    echo -e "${vermelho}‚ùå install.sh n√£o encontrado${reset}"
    exit 1
fi

if [ -f "check.sh" ]; then
    echo -e "${verde}‚úÖ check.sh encontrado${reset}"
else
    echo -e "${vermelho}‚ùå check.sh n√£o encontrado${reset}"
    exit 1
fi

if [ -f "README.md" ]; then
    echo -e "${verde}‚úÖ README.md encontrado${reset}"
else
    echo -e "${vermelho}‚ùå README.md n√£o encontrado${reset}"
fi

if [ -f "config.json" ]; then
    echo -e "${verde}‚úÖ config.json encontrado${reset}"
else
    echo -e "${vermelho}‚ùå config.json n√£o encontrado${reset}"
fi

# Verificar se Docker est√° dispon√≠vel
echo -e "${amarelo}üê≥ Verificando Docker...${reset}"
if command -v docker >/dev/null 2>&1; then
    echo -e "${verde}‚úÖ Docker encontrado${reset}"
    docker_version=$(docker --version)
    echo -e "${amarelo}üìã Vers√£o: $docker_version${reset}"
else
    echo -e "${vermelho}‚ùå Docker n√£o encontrado${reset}"
fi

# Verificar se h√° containers n8n rodando
echo -e "${amarelo}üîç Verificando containers n8n...${reset}"
if command -v docker >/dev/null 2>&1; then
    n8n_containers=$(docker ps --format "{{.Names}}" | grep n8n | wc -l)
    if [ "$n8n_containers" -gt 0 ]; then
        echo -e "${verde}‚úÖ $n8n_containers container(s) n8n encontrado(s)${reset}"
        docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep n8n
    else
        echo -e "${amarelo}‚ö†Ô∏è  Nenhum container n8n em execu√ß√£o${reset}"
    fi
fi

# Verificar permiss√µes dos scripts
echo -e "${amarelo}üîê Verificando permiss√µes...${reset}"
if [ -x "install.sh" ]; then
    echo -e "${verde}‚úÖ install.sh √© execut√°vel${reset}"
else
    echo -e "${amarelo}‚ö†Ô∏è  install.sh n√£o √© execut√°vel (execute: chmod +x install.sh)${reset}"
fi

if [ -x "check.sh" ]; then
    echo -e "${verde}‚úÖ check.sh √© execut√°vel${reset}"
else
    echo -e "${amarelo}‚ö†Ô∏è  check.sh n√£o √© execut√°vel (execute: chmod +x check.sh)${reset}"
fi

# Verificar se √© root
echo -e "${amarelo}üë§ Verificando permiss√µes de usu√°rio...${reset}"
if [ "$EUID" -eq 0 ]; then
    echo -e "${verde}‚úÖ Executando como root${reset}"
else
    echo -e "${amarelo}‚ö†Ô∏è  N√£o est√° executando como root (use sudo para instalar)${reset}"
fi

echo ""
echo -e "${ciano}üéØ Pr√≥ximos passos:${reset}"
echo "1. Para instalar FFmpeg: sudo bash install.sh"
echo "2. Para verificar status: sudo bash check.sh"
echo "3. Para verificar apenas FFmpeg: sudo bash install.sh -c"
echo "4. Para desinstalar: sudo bash install.sh -u"

echo ""
echo -e "${verde}‚úÖ Teste conclu√≠do!${reset}"
